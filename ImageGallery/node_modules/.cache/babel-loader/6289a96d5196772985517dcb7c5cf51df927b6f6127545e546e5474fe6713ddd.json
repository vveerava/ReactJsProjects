{"ast":null,"code":"var _jsxFileName = \"/Users/vgiridhar/REACTJS/GitHub/ReactJsProjects/ImageGallery/src/components/music_player.js\";\nimport React, { useState, useEffect } from \"react\";\n\n// Import your audio file\nimport song from \"../music/the-virgin-medieval-music-4238.mp3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nplayPause = () => {\n  // Get state of song\n  let isPlaying = this.state.isPlaying;\n  if (isPlaying) {\n    // Pause the song if it is playing\n    this.state.audio.pause();\n  } else {\n    // Play the song if it is paused\n    this.state.audio.play();\n  }\n\n  // Change the state of song\n  this.setState({\n    isPlaying: !isPlaying\n  });\n};\nexport default function MusicPlayer() {\n  // Create state\n  state = {\n    // Get audio file in a variable\n    audio: new Audio(song),\n    // Set initial state of song\n    isPlaying: false\n  };\n\n  // Main function to handle both play and pause operations\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: this.state.isPlaying ? \"Song is Playing\" : \"Song is Paused\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.playPause,\n      children: \"Play | Pause\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n}\n_c = MusicPlayer;\nvar _c;\n$RefreshReg$(_c, \"MusicPlayer\");","map":{"version":3,"names":["React","useState","useEffect","song","playPause","isPlaying","state","audio","pause","play","setState","MusicPlayer","Audio"],"sources":["/Users/vgiridhar/REACTJS/GitHub/ReactJsProjects/ImageGallery/src/components/music_player.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\n// Import your audio file\nimport song from \"../music/the-virgin-medieval-music-4238.mp3\"\n\nplayPause = () => {\n    // Get state of song\n    let isPlaying = this.state.isPlaying;\n\n    if (isPlaying) {\n      // Pause the song if it is playing\n      this.state.audio.pause();\n    } else {\n\n      // Play the song if it is paused\n      this.state.audio.play();\n    }\n\n    // Change the state of song\n    this.setState({ isPlaying: !isPlaying });\n  };\n\nexport default function  MusicPlayer() {\n  // Create state\n  state = {\n    // Get audio file in a variable\n    audio: new Audio(song),\n    // Set initial state of song\n    isPlaying: false,\n  };\n\n  // Main function to handle both play and pause operations\n  \n\n    return (\n      <div>\n        {/* Show state of song on website */}\n        <p>\n          {this.state.isPlaying ? \n            \"Song is Playing\" : \n            \"Song is Paused\"}\n        </p>\n\n        {/* Button to call our main function */}\n        <button onClick={this.playPause}>\n          Play | Pause\n        </button>\n      </div>\n    );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAElD;AACA,OAAOC,IAAI,MAAM,6CAA6C;AAAA;AAE9DC,SAAS,GAAG,MAAM;EACd;EACA,IAAIC,SAAS,GAAG,IAAI,CAACC,KAAK,CAACD,SAAS;EAEpC,IAAIA,SAAS,EAAE;IACb;IACA,IAAI,CAACC,KAAK,CAACC,KAAK,CAACC,KAAK,EAAE;EAC1B,CAAC,MAAM;IAEL;IACA,IAAI,CAACF,KAAK,CAACC,KAAK,CAACE,IAAI,EAAE;EACzB;;EAEA;EACA,IAAI,CAACC,QAAQ,CAAC;IAAEL,SAAS,EAAE,CAACA;EAAU,CAAC,CAAC;AAC1C,CAAC;AAEH,eAAe,SAAUM,WAAW,GAAG;EACrC;EACAL,KAAK,GAAG;IACN;IACAC,KAAK,EAAE,IAAIK,KAAK,CAACT,IAAI,CAAC;IACtB;IACAE,SAAS,EAAE;EACb,CAAC;;EAED;;EAGE,oBACE;IAAA,wBAEE;MAAA,UACG,IAAI,CAACC,KAAK,CAACD,SAAS,GACnB,iBAAiB,GACjB;IAAgB;MAAA;MAAA;MAAA;IAAA,QAChB,eAGJ;MAAQ,OAAO,EAAE,IAAI,CAACD,SAAU;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAEvB;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEZ;AAAC,KA3BwBO,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}