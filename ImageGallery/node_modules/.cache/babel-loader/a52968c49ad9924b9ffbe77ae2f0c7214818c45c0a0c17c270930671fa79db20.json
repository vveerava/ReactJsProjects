{"ast":null,"code":"var _jsxFileName = \"/Users/vgiridhar/REACTJS/GitHub/ReactJsProjects/ImageGallery/src/components/music_player.js\";\nimport React, { useState, useEffect } from \"react\";\n\n// Import your audio file\nimport song from \"../music/the-virgin-medieval-music-4238.mp3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MusicPlayer() {\n  // Create state\n  state = {\n    // Get audio file in a variable\n    audio: new Audio(song),\n    // Set initial state of song\n    isPlaying: false\n  };\n\n  // Main function to handle both play and pause operations\n  //   playPause = () => {\n  //     // Get state of song\n  //     let isPlaying = this.state.isPlaying;\n\n  //     if (isPlaying) {\n  //       // Pause the song if it is playing\n  //       this.state.audio.pause();\n  //     } else {\n\n  //       // Play the song if it is paused\n  //       this.state.audio.play();\n  //     }\n\n  //     // Change the state of song\n  //     this.setState({ isPlaying: !isPlaying });\n  //   };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.playPause,\n      children: \"Play | Pause\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 7\n  }, this);\n}\n_c = MusicPlayer;\nvar _c;\n$RefreshReg$(_c, \"MusicPlayer\");","map":{"version":3,"names":["React","useState","useEffect","song","MusicPlayer","state","audio","Audio","isPlaying","playPause"],"sources":["/Users/vgiridhar/REACTJS/GitHub/ReactJsProjects/ImageGallery/src/components/music_player.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\n// Import your audio file\nimport song from \"../music/the-virgin-medieval-music-4238.mp3\"\n\nexport default function  MusicPlayer() {\n  // Create state\n  state = {\n    // Get audio file in a variable\n    audio: new Audio(song),\n    // Set initial state of song\n    isPlaying: false,\n  };\n\n  // Main function to handle both play and pause operations\n//   playPause = () => {\n//     // Get state of song\n//     let isPlaying = this.state.isPlaying;\n\n//     if (isPlaying) {\n//       // Pause the song if it is playing\n//       this.state.audio.pause();\n//     } else {\n\n//       // Play the song if it is paused\n//       this.state.audio.play();\n//     }\n\n//     // Change the state of song\n//     this.setState({ isPlaying: !isPlaying });\n//   };\n\n    return (\n      <div>\n        {/* Show state of song on website */}\n        {/* <p>\n          {this.state.isPlaying ? \n            \"Song is Playing\" : \n            \"Song is Paused\"}\n        </p> */}\n\n        {/* Button to call our main function */}\n        <button onClick={this.playPause}>\n          Play | Pause\n        </button>\n      </div>\n    );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAElD;AACA,OAAOC,IAAI,MAAM,6CAA6C;AAAA;AAE9D,eAAe,SAAUC,WAAW,GAAG;EACrC;EACAC,KAAK,GAAG;IACN;IACAC,KAAK,EAAE,IAAIC,KAAK,CAACJ,IAAI,CAAC;IACtB;IACAK,SAAS,EAAE;EACb,CAAC;;EAED;EACF;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEI,oBACE;IAAA,uBASE;MAAQ,OAAO,EAAE,IAAI,CAACC,SAAU;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAEvB;IAAA;IAAA;IAAA;EAAA,QACL;AAEZ;AAAC,KA1CwBL,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}